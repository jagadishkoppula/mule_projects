<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <spring:beans>
        <spring:import resource="classpath:api.xml" />
    </spring:beans>
    <munit:config mock-connectors="false" mock-inbounds="false" doc:name="MUnit configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="localhost" port="8081" basePath="/api" doc:name="HTTP Request Configuration"/>
    <munit:test name="get:/CustomerDetailsByPhone/phone:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/CustomerDetailsByPhone/phone:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/CustomerDetailsByPhone/{phone}" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="phone" value="256-4295-3540"/>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_200_customerdetailsbyphone_{phone}_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/CustomerPhones:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/CustomerPhones:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/CustomerPhones" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_200_customerphones_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/CustomerProject/location:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/CustomerProject/location:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/CustomerProject/{location}" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="location" value="usa"/>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_200_customerproject_{location}_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/Opportunity/Account:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/Opportunity/Account:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/Opportunity/{Account}" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="Account" value="University of Arizona"/>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_200_opportunity_{account}_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/OpportunityByLocation/eventlocation:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/OpportunityByLocation/eventlocation:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/OpportunityByLocation/{eventlocation}" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="eventlocation" value="Anytown"/>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_200_opportunitybylocation_{eventlocation}_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/OpportunityByModel/model:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/OpportunityByModel/model:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/OpportunityByModel/{model}" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="model" value="veyron"/>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_200_opportunitybymodel_{model}_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/OpportunityDetails/stage:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/OpportunityDetails/stage:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/OpportunityDetails/{stage}" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="stage" value="Closed Won"/>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_200_opportunitydetails_{stage}_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/OpportunityPricingByCloseDate:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/OpportunityPricingByCloseDate:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/OpportunityPricingByCloseDate" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json"/>

            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_200_opportunitypricingbyclosedate_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
</mule>
